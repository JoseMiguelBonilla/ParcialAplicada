@page "/Registro"
@inject LibrosBLL LibrosBLL
@using ParcialAplicada.Models
@inject NotificationService notificationService


<EditForm Model="Libros" OnValidSubmit="Guardar">
     <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Libros </h3>
            </div>
            <div class="card-body">
                @*BuscarId*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="Libros.LibroId" class="form-control" aria-describedby="buscarButton" />
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="buscarButton">
                            <i class="oi oi-magnifying-glass" />
                        </button>
                    </div>
                </div>

                @*LibroId*@
                <div class="mb-3">
                    <label class="form-label">LibroId</label>
                    <InputNumber @bind-Value="Libros.LibroId" class="form-control" />
                    <ValidationMessage For="@(() => Libros.LibroId)" />
                </div>

                @*Titulo*@
                <div class="mb-3">
                    <label class="form-label">Titulo</label>
                    <InputText @bind-Value="Libros.Titulo" class="form-control" />
                    <ValidationMessage For="@(() => Libros.Titulo)" />
                </div>

                @*Precio*@
                <div class="mb-3">
                    <label class="form-label">Precio</label>
                    <InputNumber @bind-Value="Libros.Precio" class="form-control" />
                    <ValidationMessage For="@(() => Libros.Precio)" />
                </div>

            </div>

            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-primary" @onclick="Nuevo"> <i class="oi oi-file" /> Nuevo</button>
                    <button type="submit" class="btn btn-success"> <i class="oi oi-document" /> Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar</button>
                </div>
            </div>
        </div>
    </div>


</EditForm>


@code 
{
    public int LibroId { get; set; }
    public Libros Libros = new Libros();

    protected override void OnInitialized()
    {
        if (LibroId > 0)
        {
            this.Libros.LibroId = this.LibroId;
            Buscar();
        }
    }

    public void Buscar()
    {
        var LibroEncontrada = LibrosBLL.Buscar(Libros.LibroId);
        if (LibroEncontrada != null)
        {
            this.Libros = LibroEncontrada;
        }
        else
        {
            notificationService.ShowNotification(
            titulo: "Error de Busqueda",
            mensaje: "Registro no encontrado",
            NotificationSeverity.Error);

        }
    }
    public void Nuevo()
    {
        this.Libros = new Libros();
    }

    public void Guardar()
    {
        if (!Validar())
        {
            notificationService.ShowNotification(
                titulo: "Validacion",
                mensaje: "Error, Revise los campos",
                NotificationSeverity.Error);
            return;
        }

        var guardo = LibrosBLL.Guardar(this.Libros);
        if (guardo)
        {
            notificationService.ShowNotification(
                titulo: "Exito",
                mensaje: "Guardo correctamente!",
                NotificationSeverity.Success);
            Nuevo();
        }

        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Ocurrio un error y no fue posible guardad",
                NotificationSeverity.Error);
        }
    }

    public void Eliminar()
    {
        Buscar();
        if (LibrosBLL.Eliminar(this.Libros))
        {
            notificationService.ShowNotification(
                titulo: "Exito",
                mensaje: "Eliminado con Exito!",
                NotificationSeverity.Success);
            Nuevo();
        }
        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Ocurrio un error y no fue posible eliminar",
                NotificationSeverity.Error);
        }
    }

    public bool Validar()
    {
        return true;
    }

}